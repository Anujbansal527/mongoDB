
test> db
test
test> show dbs
admin   40.00 KiB
config  60.00 KiB
demo    72.00 KiB
local   40.00 KiB
test> use newDb
switched to db newDb
newDb> db.createCollection("newData")
{ ok: 1 }
newDb> db.newData.insertMany({name:"React Js",{ctype:"Front End"},{author:"XYZ"},{active:"true"}})
Uncaught:
SyntaxError: Unexpected token (1:39)

> 1 | db.newData.insertMany({name:"React Js",{ctype:"Front End"},{author:"XYZ"},{active:"true"}})
    |                                        ^
  2 |

newDb> db.newData.insertMany({name:"React Js"},{ctype:"Front End"},{author:"XYZ"},{active:"true"})
MongoInvalidArgumentError: Argument "docs" must be an array of documents
newDb> db.newData.insertMany(name:"React Js",ctype:"Front End",author:"XYZ",active:"true")
Uncaught:
SyntaxError: Unexpected token, expected "," (1:26)

> 1 | db.newData.insertMany(name:"React Js",ctype:"Front End",author:"XYZ",active:"true")
    |                           ^
  2 |

newDb> db.newData.insertMany([{name:"React Js"},{ctype:"Front End"},{author:"XYZ"},{active:"true"}])
{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId("64e95886a0138e4f23088ab7"),
    '1': ObjectId("64e95886a0138e4f23088ab8"),
    '2': ObjectId("64e95886a0138e4f23088ab9"),
    '3': ObjectId("64e95886a0138e4f23088aba")
  }
}
newDb> db.newData.insert({ name:"React Js" , type:"Front End"}, {author:"XYZ"},{active:true})
DeprecationWarning: Collection.insert() is deprecated. Use insertOne, insertMany, or bulkWrite.
{
  acknowledged: true,
  insertedIds: { '0': ObjectId("64e959c8a0138e4f23088abb") }
}

newDb> db.newData.find()
[
  {
    _id: ObjectId("64e959c8a0138e4f23088abb"),
    name: 'React Js',
    type: 'Front End'
  },
  {
    _id: ObjectId("64e959f6a0138e4f23088abc"),
    name: 'React Js',
    type: 'Front End',
    author: 'XYZ',
    active: true
  },
  {
    _id: ObjectId("64e95a00a0138e4f23088abd"),
    name: 'React Js',
    type: 'Front End',
    author: 'XYZ',
    active: true
  },
  {
    _id: ObjectId("64e95a13a0138e4f23088abe"),
    name: 'Angular Js',
    type: 'Front End',
    author: 'XYZ',
    active: true
  },
  {
    _id: ObjectId("64e95a2fa0138e4f23088abf"),
    name: 'MongoDB',
    type: 'Back End',
    author: 'XYZ',
    active: true
  }
]

newDb> db.newData.find().pretty();
[
  {
    _id: ObjectId("64e959c8a0138e4f23088abb"),
    name: 'React Js',
    type: 'Front End'
  },
  {
    _id: ObjectId("64e959f6a0138e4f23088abc"),
    name: 'React Js',
    type: 'Front End',
    author: 'XYZ',
    active: true
  },
  {
    _id: ObjectId("64e95a00a0138e4f23088abd"),
    name: 'React Js',
    type: 'Front End',
    author: 'XYZ',
    active: true
  },
  {
    _id: ObjectId("64e95a13a0138e4f23088abe"),
    name: 'Angular Js',
    type: 'Front End',
    author: 'XYZ',
    active: true
  },
  {
    _id: ObjectId("64e95a2fa0138e4f23088abf"),
    name: 'MongoDB',
    type: 'Back End',
    author: 'XYZ',
    active: true
  }
]


newDb> db.newData.find({name:"MongoDB"})
[
  {
    _id: ObjectId("64e95a2fa0138e4f23088abf"),
    name: 'MongoDB',
    type: 'Back End',
    author: 'XYZ',
    active: true
  }
]
newDb>
newDb> db.newData.find({name:"MongoDB"},{name:1})
[ { _id: ObjectId("64e95a2fa0138e4f23088abf"), name: 'MongoDB' } ]

newDb> db.newData.find({name:"MongoDB"},{_id:0,name:1})
[ { name: 'MongoDB' } ]

newDb>
newDb> db.newData.find({active:true}).limit(2)
[
  {
    _id: ObjectId("64e959f6a0138e4f23088abc"),
    name: 'React Js',
    type: 'Front End',
    author: 'XYZ',
    active: true
  },
  {
    _id: ObjectId("64e95a00a0138e4f23088abd"),
    name: 'React Js',
    type: 'Front End',
    author: 'XYZ',
    active: true
  }
]
newDb>

newDb> db.newData.find({active:true}).limit(1).skip(1)
[
  {
    _id: ObjectId("64e95a00a0138e4f23088abd"),
    name: 'React Js',
    type: 'Front End',
    author: 'XYZ',
    active: true
  }
]
newDb> db.newData.find({active:true}).limit(1).skip(2)
[
  {
    _id: ObjectId("64e95a13a0138e4f23088abe"),
    name: 'Angular Js',
    type: 'Front End',
    author: 'XYZ',
    active: true
  }
]
newDb>

newDb> db.newData.updateOne({name:"Angular Js"},{$set:{active:false}})
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}
newDb>

newDb> db.newData.deleteMany({})
{ acknowledged: true, deletedCount: 5 }
newDb>





